/* Generated By:JJTree&JavaCC: Do not edit this line. Dot2DotConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Dot2DotConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int GRAPH = 4;
  /** RegularExpression Id. */
  int STRICT = 5;
  /** RegularExpression Id. */
  int ATTR_SMT = 6;
  /** RegularExpression Id. */
  int SUBGRAPH = 7;
  /** RegularExpression Id. */
  int COMPASS_PT = 8;
  /** RegularExpression Id. */
  int NODE = 9;
  /** RegularExpression Id. */
  int ID = 10;
  /** RegularExpression Id. */
  int INTEGER = 11;
  /** RegularExpression Id. */
  int EDGEOP_DIRECTED = 12;
  /** RegularExpression Id. */
  int EDGEOP_UNDIRECTED = 13;
  /** RegularExpression Id. */
  int HTML_STRING = 14;
  /** RegularExpression Id. */
  int STRING = 15;
  /** RegularExpression Id. */
  int NUMBER = 16;
  /** RegularExpression Id. */
  int LF = 17;
  /** RegularExpression Id. */
  int LETTERS = 18;
  /** RegularExpression Id. */
  int UNDERSCORE = 19;
  /** RegularExpression Id. */
  int CARDINAL = 20;
  /** RegularExpression Id. */
  int WHITESPACE = 21;
  /** RegularExpression Id. */
  int DOT = 22;
  /** RegularExpression Id. */
  int BACKSLASH = 23;
  /** RegularExpression Id. */
  int SLASH = 24;
  /** RegularExpression Id. */
  int LBRACK = 25;
  /** RegularExpression Id. */
  int RBRACK = 26;
  /** RegularExpression Id. */
  int LSQBRACK = 27;
  /** RegularExpression Id. */
  int RSQBRACK = 28;
  /** RegularExpression Id. */
  int COLON = 29;
  /** RegularExpression Id. */
  int SEMICOLON = 30;
  /** RegularExpression Id. */
  int EQUALS = 31;
  /** RegularExpression Id. */
  int COMMA = 32;
  /** RegularExpression Id. */
  int MOREE = 33;
  /** RegularExpression Id. */
  int LESS = 34;
  /** RegularExpression Id. */
  int LPARENTHESIS = 35;
  /** RegularExpression Id. */
  int RPARENTHESIS = 36;
  /** RegularExpression Id. */
  int MINUS = 37;
  /** RegularExpression Id. */
  int PLUS = 38;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\u0000\"",
    "<GRAPH>",
    "\"strict\"",
    "<ATTR_SMT>",
    "\"subgraph\"",
    "<COMPASS_PT>",
    "\"node\"",
    "<ID>",
    "<INTEGER>",
    "\"->\"",
    "\"--\"",
    "<HTML_STRING>",
    "<STRING>",
    "<NUMBER>",
    "\"\\n\"",
    "<LETTERS>",
    "\"_\"",
    "\"#\"",
    "\" \"",
    "\".\"",
    "\"\\\\\"",
    "\"/\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\":\"",
    "\";\"",
    "\"=\"",
    "\",\"",
    "\">\"",
    "\"<\"",
    "\"(\"",
    "\")\"",
    "\"-\"",
    "\"+\"",
    "\"graph\"",
  };

}
